name: Python package

on: 
  push:
    branches:
      - master
      - dev
  pull_request:

jobs:
  django:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: 
#           - 3.6
          - "3.10"
        django:
#           - "==2.2.*"
          - "==4.2.*"
    steps:
    - uses: actions/checkout@v3
    # Pull the latest image to build, and avoid caching pull-only images.
    # (docker pull is faster than caching in most cases.)
    - run: |
        docker-compose --file docker-compose.yml --file docker-compose.test.yml pull
        docker pull python:${{matrix.python}}-slim
    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # - uses: satackey/action-docker-layer-caching@v0.0.11
    #   # Ignore the failure of a step and avoid terminating the job.
    #   continue-on-error: true
    #   with:
    #     key: python-${{ matrix.python }}-${{ matrix.django }}-{hash}
    #     restore-keys: |
    #       python-${{ matrix.python }}-${{ matrix.django }}-
    - name: Start database early
      run: docker-compose up -d db
    - name: Build application
      run: make build
      env:
        PYTHON_VERSION: ${{ matrix.python }}
    - name: Migration check
      run: make check
    - name: Show settings
      run: make settings
    - name: Run unit tests
      run: make test
    - name: Run e2e tests
      run: make e2e

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: docker-compose pull
    # - uses: satackey/action-docker-layer-caching@v0.0.11
    #   continue-on-error: true
    - name: Build application
      run: make build
    - name: Build documentation
      run: make docs

  # build-and-push:
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - test_web
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Get version from script
  #       id: get_version
  #       working-directory: /code/poradnia
  #       run: echo "::set-output name=version::$(python version.py)"

  #     - name: Set image tag
  #       id: set_tag
  #       run: echo "::set-output name=tag::$(if [ $GITHUB_REF == 'refs/heads/master' ]; then echo 'prod'; else echo 'staging'; fi)"

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: true
  #         tags: |
  #           docker.io/${{ secrets.DOCKER_USERNAME }}/${{ variables.REPO_NAME }}:${{ steps.get_version.outputs.version }}_${{ steps.set_tag.outputs.tag }}
